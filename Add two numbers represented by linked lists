class Solution
{
    private: 
    struct Node* reverse(Node* root){
        Node* temp1=NULL,*temp2=root,*temp3;
        while( temp2 != NULL ){
            temp3=temp2->next;
            temp2->next =temp1;
            temp1=temp2;
            temp2=temp3;
        }
        return temp1;
    }
    private:
    struct Node* add(Node* num1,Node* num2){
        Node* temp1=num1;
        Node* temp2=num2;
        int sum=0,cry=0;
        Node* head = NULL,*temp=NULL;
        while( temp1 != NULL && temp2 != NULL ){
            sum = temp1 -> data+temp2->data+cry;
            cry = sum /10;
            sum = sum %10;
            temp1 = temp1 -> next;
            temp2 = temp2 -> next;
            if( head == NULL ){
                head = new Node(sum);
                temp=head;
            }
            else{
                temp->next = new Node(sum);
                temp=temp->next;
            }
        }
        while( temp1 != NULL ){
            sum = temp1 -> data+cry;
            cry = sum /10;
            sum = sum %10;
            if( head == NULL ){
                head = new Node(sum);
                temp=head;
            }
            else{
                temp->next = new Node(sum);
                temp=temp->next;
            }
            temp1 = temp1 ->next;
        }
        while( temp2 != NULL ){
            sum = temp2->data+cry;
            cry = sum /10;
            sum = sum %10;
            if( head == NULL ){
                head = new Node(sum);
                temp=head;
            }
            else{
                temp->next = new Node(sum);
                temp=temp->next;
            }
            temp2 = temp2->next;
        }
        while( cry != 0 ){
            temp->next = new Node(cry);
            temp=temp->next;
            cry=0;
        }
        return head;
    }
    public:
    //Function to add two numbers represented by linked list.
    struct Node* addTwoLists(struct Node* num1, struct Node* num2)
    {
        num1=reverse(num1);
        num2=reverse(num2);
        Node* temp = reverse(add(num1,num2));
        while( temp != NULL && temp ->data == 0 ){
            temp=temp->next;
        }
        if( temp == NULL ) return new Node(0);
        return temp;
    }
};
