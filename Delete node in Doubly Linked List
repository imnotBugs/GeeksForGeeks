class Solution {
  public:
    Node* deleteNode(Node* head, int x) {
        
         if (head == NULL || x <= 0) return head;  // edge cases: empty list or invalid position

        Node* temp = head;

        // If the node to be deleted is the head node
        if (x == 1) {
            head = head->next;
            if (head != NULL) {
                head->prev = NULL;
            }
            free(temp);
            return head;
        }

        
        
        temp=head;
         for (int i = 1; temp != NULL && i < x; i++) {
            temp = temp->next;
        }

        // If the position is greater than the number of nodes
        if (temp == NULL) return head;

  
        
        
        temp->prev->next=temp->next;
        if(temp->next!=NULL)
        temp->next->prev=temp->prev;
        
        free(temp);
        
        return head;
        
        
     
    }
};
